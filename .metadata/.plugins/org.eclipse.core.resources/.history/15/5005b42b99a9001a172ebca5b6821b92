package rules;


import java.util.*;
import data.*;
import pattern.*;


public class Rule9 extends Rule{
	@Override
	public Map<String, String> applyRule(Vinput[] today) {
		int i = 0;
		float closingPoint = (float)Math.round(today[i].getClosingPrice()/10)/100;
		float percentChangeMorning = (float)(today[i].getOpenPrice()-today[i].getYesterdayPoint())/today[i].getYesterdayPoint()*100;
		float percentChangeAfternoon = (float)(closingPoint-today[i].getOpenPrice())/closingPoint*100;
		map.put("percentChangeMorning", toString(percentChangeMorning));
		map.put("percentChangeAfternoon", toString(percentChangeAfternoon));
		map.put("morningPoint", toString(today[i].getOpenPrice()));
		map.put("cv", toString(today[i].getPointChange()));
		map.put("changePointMorning", toString(today[i].getOpenPrice()-today[i].getYesterdayPoint()));
		map.put("changePointAfternoon", toString(closingPoint-today[i].getOpenPrice()));
		map.put("klkl", toString(today[i].getCallOptionsVolume()));
		map.put("gtkl", toString(today[i].getCallOptionsValue()));
		map.put("klgd", toString(today[i].getPutOptionsVolume()));
		map.put("gtgd", toString(today[i].getPutOptionsValue()));
		map.put("minPoint", toString(today[i].getMinPrice()));
		map.put("maxPoint", toString(today[i].getMaxPrice()));
		map.put("closePoint", toString(closingPoint));
		map.put("date", today[i].getDate());
		map.put("cp", toString(today[i].getPercentageChange()));
		return map;
	}
}
